services:
  # USB Token Server - Main service for handling USB token operations
  usb-token-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eta-usb-token-server
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - CORS_ORIGIN=http://localhost:8000
      - LOG_LEVEL=info
      - USB_TOKEN_TIMEOUT=30000
      - MAX_CONCURRENT_OPERATIONS=5
    volumes:
      # Mount USB devices (if running on Linux)
      - /dev/bus/usb:/dev/bus/usb:rw
      # Mount temp directory for signing operations
      - ./temp:/app/temp
      # Mount logs directory
      - ./logs:/app/logs
    devices:
      # Grant access to USB devices (Linux only)
      - /dev/bus/usb
    privileged: true  # Required for USB device access
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache (Optional - for caching token operations)
  redis-cache:
    image: redis:7-alpine
    container_name: eta-redis-cache
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-eta_redis_pass}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional - for load balancing multiple token servers)
  nginx-proxy:
    image: nginx:alpine
    container_name: eta-nginx-proxy
    ports:
      - "2345:80"  # ETA_USB_TOKEN_PROXY_PORT
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - usb-token-server
    restart: unless-stopped
    profiles:
      - proxy  # Only start with --profile proxy

  # Monitoring with Prometheus (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: eta-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    profiles:
      - monitoring  # Only start with --profile monitoring

volumes:
  redis_data:
    driver: local
  prometheus_data:
    driver: local
